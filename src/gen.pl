%generate_query Relation Functor String String Functor Any;generate_chunk Relation Functor String String Any;notblank Relation Any;serialize_item Relation Functor String;make_runtime_binds Relation Any Any Any Any Any;make_binds Relation Any Any Any Any Any;make_bind Relation Any Any Any Any;generate_world Relation Any Any Any Any Any;generate_body Relation Functor Any Any Any Any;specialize_args Relation Any Any Any Any;specialize_type Relation Any Any Any Any Any;generate_cond Relation Any Any Any Any Any;stringfy_rel Relation String Any Any Any Any Any Any;make_runtime_temps Relation Any Any Any Any Any;make_lambdas Relation Any Any Any Any Any;make_lambda Relation Functor Integer Any Any String;generate_body Relation;stringfy_rel Relation;extract_list Relation Any String Any Any;extract_type_args_and_push_into_env Relation Any Any Any Any;extract_type_args Relation Any Any Any;extract_args Relation Any Any Any Any Any String;extract_type Relation Any Any Any;extract_name Relation Functor String Any Any String String;generate_lambda Relation Any Any Any Any;extract_list Relation;extract_ids Relation Any Any Any Any;extract_id Relation Any Any Any Any;escape_double_quotes Relation Any Any Any;is_relation Relation Any Any;is_functor Relation Any Any;is_type Relation Any Any Any;is_type2 Relation Any Any Any;make_this_string Relation Any Any Any Any;make_local_string Relation Any Any Any Any;compare_functor Relation Any Any Any Any;compare_relation Relation Any Any Any Any Any;id_var Relation Any Any;is_id Relation Any;specialize_args Relation Any Any Any Any;extract_args Relation;extract_type Relation;extract_type_args Relation;extract_modules Relation Any Any Any;extract_module Relation Any Any;find_lib Relation Any Any;env_get Relation Any Any;env_get_functor Relation Any Any Any;env_get_types Relation Any Any Any;env_has_var Relation Any Any;env_get_var Relation Any Any Any;_env_get_mod Relation Any Any Any;_env_get_var Relation Any Any Any;_env_get Relation Any Any;env_push_module Relation Any Any Any Any;env_set_lambdas Relation Any Any Any;env_push_lambda Relation Any Any Any;env_push_functor Relation Any Any Any;env_push_if_not_found Relation Any Any Any;env_push Relation Any Any Any;env_modules Relation Any Any;env_lambdas Relation Any Any;env_functors Relation Any Any;env_vars Relation Any Any;env_init Relation Any Any Any Any;extract_type_information Relation String Functor;extract Relation Any Any;gensym Relation Any Any;custom_throw Relation Any Any;Info FunctorObject;Op FunctorObject;TTable FunctorObject;TList FunctorObject;Goal FunctorObject;Func FunctorObject;ObjGet FunctorObject;Id FunctorObject;Str FunctorObject;Num FunctorObject;Declaration FunctorObject;Once FunctorObject;Host FunctorObject;SoftCut FunctorObject;Cond FunctorObject;If FunctorObject;ObjPred FunctorObject;Bracket FunctorObject;Or FunctorObject;And FunctorObject;Pred FunctorObject;False FunctorObject;True FunctorObject;Inequality FunctorObject;Neq FunctorObject;Eq FunctorObject;Fact FunctorObject;Rel FunctorObject;Lib FunctorObject;Local FunctorObject;Var FunctorObject
:- style_check([-singleton,-no_effect]), ensure_loaded("core.pl").
gen1(Env0,_x,_y) :- eq(_x,fcVar(_y,_,_)).
gen0(Env0,_x) :- eq(_x,fcVar(_,"local", '[|]'(_t0,_))),neq(_t0,"FunctorObject").
:- ensure_loaded("lexer.pl").
:- ensure_loaded("parser.pl").
:- ensure_loaded("whitespacer.pl").
:- ensure_loaded("types.pl").
gen_custom_throw(Env0,_msg,_info) :- eq(_info,fcInfo(_line,_col)),obj_call2(Env0,"math","integerToString",[_line,T6]),string_concat("(line ",T6,T5),dynamic_add(T5,", col ",T4),obj_call2(Env0,"math","integerToString",[_col,T7]),dynamic_add(T4,T7,T3),dynamic_add(T3,") ",T2),dynamic_add(T2,_msg,T1),obj_call2(Env0,"logic","throw",[T1]).
gen_gensym(Env0,_prefix,_s) :- gensym(_prefix,_x),atom_string(_x,_s).
gen_extract(Env0,_s,_x) :- once(obj_call2(Env0,"string","find",[_s," ",_j])),obj_call2(Env0,"string","slice",[_s,0,_j,_name]),obj_call2(Env0,"string","size",[_s,T9]),fd_add(_j,1,T8),obj_call2(Env0,"string","slice",[_s,T8,T9,_stype]),obj_call2(Env0,"types","string_to_type",[_stype,_type]),eq(_x,fcVar(_name,"object",_type)).
gen_extract_type_information(Env0,_fname,_x) :- obj_call2(Env0,"io","open",[_fname,"read",_f]),obj_call2(Env0,"io","fileReadChar",[_f,_c]),(((neq(_c,"%")),string_concat("Warning: no type information on file ",_fname,T10),obj_call2(Env0,"io","writeln",[T10]),eq(_x,[]));(obj_call2(Env0,"io","fileReadLine",[_f,_line]),(((eq(_line,"")),string_concat("Warning: blank type information on file ",_fname,T11),obj_call2(Env0,"io","writeln",[T11]),eq(_x,[]));(obj_call2(Env0,"io","close",[_f]),once(obj_call2(Env0,"string","split",[_line,";",_l])),env_get(Env0,"extract",T12),obj_call2(Env0,"list","map",[_l,closure(T12,Env0),_l2]),eq(_x,_l2))))).
gen_env_init(Env0,_env,_vars,_fcs,_lambda) :- eq(_env,'[|]'(_vars,'[|]'(_fcs,'[|]'(_lambda,'[|]'([],[]))))).
gen_env_vars(Env0,_env,_x) :- eq(_env,'[|]'(_x,'[|]'(_,'[|]'(_,'[|]'(_,[]))))).
gen_env_functors(Env0,_env,_x) :- eq(_env,'[|]'(_,'[|]'(_x,'[|]'(_,'[|]'(_,[]))))).
gen_env_lambdas(Env0,_env,_x) :- eq(_env,'[|]'(_,'[|]'(_,'[|]'(_x,'[|]'(_,[]))))).
gen_env_modules(Env0,_env,_x) :- eq(_env,'[|]'(_,'[|]'(_,'[|]'(_,'[|]'(_x,[]))))).
gen_env_push(Env0,_env,_f,_env2) :- eq(_env,'[|]'(_vars,'[|]'(_fcs,'[|]'(_lambda,'[|]'(_mods,[]))))),eq(_env2,'[|]'( '[|]'(_f,_vars),'[|]'(_fcs,'[|]'(_lambda,'[|]'(_mods,[]))))).
gen_env_push_if_not_found(Env0,_env,_f,_env2) :- eq(_env,'[|]'(_vars,'[|]'(_fcs,'[|]'(_lambda,'[|]'(_mods,[]))))),eq(_f,fcVar(_name,_,_)),(((obj_call2(Env0,"list","has",[_vars,fcVar(_name,_,_)])),eq(_env2,_env));(eq(_env2,'[|]'( '[|]'(_f,_vars),'[|]'(_fcs,'[|]'(_lambda,'[|]'(_mods,[]))))))).
gen_env_push_functor(Env0,_env,_f,_env2) :- eq(_env,'[|]'(_vars,'[|]'(_fcs,'[|]'(_lambda,'[|]'(_mods,[]))))),eq(_env2,'[|]'(_vars,'[|]'( '[|]'(_f,_fcs),'[|]'(_lambda,'[|]'(_mods,[]))))).
gen_env_push_lambda(Env0,_env,_f,_env2) :- eq(_env,'[|]'(_vars,'[|]'(_fcs,'[|]'(_lambda,'[|]'(_mods,[]))))),eq(_env2,'[|]'(_vars,'[|]'(_fcs,'[|]'( '[|]'(_f,_lambda),'[|]'(_mods,[]))))).
gen_env_set_lambdas(Env0,_env,_lambdas,_env2) :- eq(_env,'[|]'(_vars,'[|]'(_fcs,'[|]'(_,'[|]'(_mods,[]))))),eq(_env2,'[|]'(_vars,'[|]'(_fcs,'[|]'(_lambdas,'[|]'(_mods,[]))))).
gen_env_push_module(Env0,_env,_mod,_type_info,_env2) :- eq(_env,'[|]'(_vars,'[|]'(_fcs,'[|]'(_lambda,'[|]'(_mods,[]))))),eq(_env2,'[|]'(_vars,'[|]'(_fcs,'[|]'(_lambda,'[|]'( '[|]'('[|]'(_mod,'[|]'(_type_info,[])),_mods),[]))))).
gen__env_get(Env0,_env,_f) :- eq(_env, '[|]'(_head,_)),eq(_head,_f);eq(_env, '[|]'(_,_tail)),env_call(Env0,"_env_get",[Env0,_tail,_f]).
gen__env_get_var(Env0,_env,_a,_f) :- eq(_env, '[|]'(_head,_)),eq(_head,fcVar(_a,_,_)),eq(_f,_head);eq(_env, '[|]'(_,_tail)),env_call(Env0,"_env_get_var",[Env0,_tail,_a,_f]).
gen__env_get_mod(Env0,_env,_a,_b) :- eq(_env, '[|]'(_head,_)),eq(_head,'[|]'(_a,'[|]'(_b,[])));eq(_env, '[|]'(_,_tail)),env_call(Env0,"_env_get_mod",[Env0,_tail,_a,_b]).
gen_env_get_var(Env0,_env,_a,_f) :- env_call(Env0,"env_vars",[Env0,_env,_vars]),env_call(Env0,"_env_get_var",[Env0,_vars,_a,_f]).
gen_env_has_var(Env0,_env,_f) :- env_call(Env0,"env_vars",[Env0,_env,_vars]),obj_call2(Env0,"list","has",[_vars,_f]).
gen_env_get_types(Env0,_env,_obj,_types) :- env_call(Env0,"env_modules",[Env0,_env,_mods]),env_call(Env0,"_env_get_mod",[Env0,_mods,_obj,_types]).
gen_env_get_functor(Env0,_env,_a,_f) :- env_call(Env0,"env_functors",[Env0,_env,_fcs]),env_call(Env0,"_env_get_var",[Env0,_fcs,_a,_f]).
gen_env_get(Env0,_env,_f) :- env_call(Env0,"env_vars",[Env0,_env,_vars]),env_call(Env0,"_env_get",[Env0,_vars,_f]).
gen_find_lib(Env0,_env,_obj_name) :- env_call(Env0,"env_vars",[Env0,_env,T13]),obj_call2(Env0,"list","find",[T13,fcLib(_,_obj_name),_]).
gen_extract_module(Env0,_name,_ts) :- dynamic_add(_name,".pl",T14),env_call(Env0,"extract_type_information",[Env0,T14,_ts]).
gen_extract_modules(Env0,_env,_l,_env2) :- (((eq(_l, '[|]'(_name,_l2))),env_call(Env0,"extract_module",[Env0,_name,_ts]),env_call(Env0,"env_push_module",[Env0,_env,_name,_ts,_env_a]),env_call(Env0,"extract_modules",[Env0,_env_a,_l2,_env2]));(eq(_env2,_env))).
gen_is_id(Env0,_x) :- eq(_x,fcId(_,_)).
gen_id_var(Env0,_x,_y) :- eq(_x,fcId(_name,_t)),eq(_y,fcVar(_name,"local",_t)).
gen_compare_relation(Env0,_fvar,_args,_env,_env2,_info) :- eq(_fvar,fcVar(_name,_,_t1)),env_call(Env0,"extract_type_args",[Env0,_args,_targs,_env]),env_call(Env0,"specialize_args",[Env0,_args,_targs,_env,_env2]),eq(_t2, '[|]'("Relation",_targs)),(((obj_call2(Env0,"types","compare_types",[_t1,_t2])),true);(string_concat("calling relation \"",_name,T20),dynamic_add(T20,"\" of type \"",T19),obj_call2(Env0,"types","type_to_string",[_t1,T21]),dynamic_add(T19,T21,T18),dynamic_add(T18,"\" as \"",T17),obj_call2(Env0,"types","type_to_string",[_t2,T22]),dynamic_add(T17,T22,T16),dynamic_add(T16,"\"",T15),eq(_msg,T15),env_call(Env0,"custom_throw",[Env0,_msg,_info]))).
gen_compare_functor(Env0,_var_fc,_args,_env,_info) :- eq(_var_fc,fcVar(_name,_,_t1)),env_call(Env0,"extract_type_args",[Env0,_args,_targs,_env]),eq(_t2, '[|]'("Functor",_targs)),(((obj_call2(Env0,"types","compare_types",[_t1,_t2])),true);(string_concat("using functor ",_name,T28),dynamic_add(T28," of type \"",T27),obj_call2(Env0,"types","type_to_string",[_t1,T29]),dynamic_add(T27,T29,T26),dynamic_add(T26,"\" as \"",T25),obj_call2(Env0,"types","type_to_string",[_t2,T30]),dynamic_add(T25,T30,T24),dynamic_add(T24,"\"",T23),eq(_msg,T23),env_call(Env0,"custom_throw",[Env0,_msg,_info]))).
gen_make_local_string(Env0,_prefix,_name,_sargs,_code) :- dynamic_add(_prefix,"closure_call(Env0,_",T36),dynamic_add(T36,_name,T35),dynamic_add(T35,",",T34),dynamic_add(T34,"[",T33),dynamic_add(T33,_sargs,T32),dynamic_add(T32,"])",T31),eq(_code,T31).
gen_make_this_string(Env0,_prefix,_name,_sargs,_code) :- string_concat("env_call(Env0,\"",_name,T38),dynamic_add(T38,"\",",T37),eq(_s1,T37),(((eq(_sargs,"")),eq(_s2,"[Env0])"));(string_concat("[Env0,",_sargs,T40),dynamic_add(T40,"])",T39),eq(_s2,T39))),dynamic_add(_prefix,_s1,T42),dynamic_add(T42,_s2,T41),eq(_code,T41).
gen_is_type2(Env0,_a,_type,_env) :- eq(_env, '[|]'(_head,_)),eq(_head,fcVar(_a,_, '[|]'(_type,_)));eq(_env, '[|]'(_,_tail)),env_call(Env0,"is_type2",[Env0,_a,_type,_tail]).
gen_is_type(Env0,_a,_type,_env) :- env_call(Env0,"env_vars",[Env0,_env,T43]),env_call(Env0,"is_type2",[Env0,_a,_type,T43]).
gen_is_functor(Env0,_a,_env) :- env_call(Env0,"is_type",[Env0,_a,"FunctorObject",_env]).
gen_is_relation(Env0,_a,_env) :- env_call(Env0,"is_type",[Env0,_a,"Relation",_env]).
gen_escape_double_quotes(Env0,_s1,_c_prev,_s2) :- eq(_s1,""),eq(_s2,_s1);obj_call2(Env0,"string","at",[_s1,0,_c]),eq(_c,"\""),neq(_c_prev,"\\"),obj_call2(Env0,"string","rest",[_s1,_tail]),env_call(Env0,"escape_double_quotes",[Env0,_tail,_c,_s_next]),obj_call2(Env0,"string","concat",["\\","\"",_ctemp]),obj_call2(Env0,"string","concat",[_ctemp,_s_next,_s2]);obj_call2(Env0,"string","rest",[_s1,_tail]),obj_call2(Env0,"string","at",[_s1,0,_c]),env_call(Env0,"escape_double_quotes",[Env0,_tail,_c,_s_next]),obj_call2(Env0,"string","concat",[_c,_s_next,_s2]).
gen_extract_id(Env0,_f,_s2,_env,_prefix) :- eq(_f,fcId(_s1,_)),eq(_prefix,""),string_concat("_",_s1,T44),eq(_s2,T44).
gen_extract_ids(Env0,_l,_s,_env,_prefix) :- eq(_l, '[|]'(_f1,[])),env_call(Env0,"extract_id",[Env0,_f1,_s,_env,_prefix]);eq(_l, '[|]'(_f1,_tail)),env_call(Env0,"extract_id",[Env0,_f1,_s1,_env,_prefix2]),env_call(Env0,"extract_ids",[Env0,_tail,_s2,_env,_prefix1]),obj_call2(Env0,"string","concat",[_prefix1,_prefix2,_prefix]),dynamic_add(_s1,",",T46),dynamic_add(T46,_s2,T45),eq(_s,T45);eq(_l,[]),eq(_s,""),eq(_prefix,"").
gen_generate_lambda(Env0,_code,_prefix,_temp_functions,_module) :- obj_call2(Env0,"list","size",[_temp_functions,_len1]),string_concat("closure(",_module,T49),obj_call2(Env0,"math","integerToString",[_len1,T50]),dynamic_add(T49,T50,T48),dynamic_add(T48,",Env0)",T47),eq(_code,T47),eq(_prefix,"").
gen_extract_name(Env0,_f,_s2,_env,_env2,_prefix,_module) :- (((eq(_f,fcId(_name,_))),eq(_env,_env2),(((eq(_name,"Cons")),eq(_prefix,""),eq(_s2,"[]"));((eq(_name,"_")),eq(_prefix,""),eq(_s2,"_"));((env_call(Env0,"is_functor",[Env0,_name,_env])),eq(_prefix,""),string_concat("fc",_name,T51),eq(_s2,T51));((env_call(Env0,"env_get_var",[Env0,_env,_name,fcVar(_name,_loc,_type)])),(((eq(_loc,"object")),env_call(Env0,"gensym",[Env0,"T",_c]),string_concat("env_get(Env0,\"",_name,T55),dynamic_add(T55,"\",",T54),dynamic_add(T54,_c,T53),dynamic_add(T53,"),",T52),eq(_prefix,T52),string_concat("closure(",_c,T57),dynamic_add(T57,",Env0)",T56),eq(_s2,T56));(eq(_prefix,""),string_concat("_",_name,T58),eq(_s2,T58))));((env_call(Env0,"env_has_var",[Env0,_env,fcLib(_,_name)])),env_call(Env0,"gensym",[Env0,"T",_c]),string_concat("env_get(Env0,\"",_name,T62),dynamic_add(T62,"\",",T61),dynamic_add(T61,_c,T60),dynamic_add(T60,"),",T59),eq(_prefix,T59),eq(_s2,_c));(eq(_prefix,""),string_concat("_",_name,T63),eq(_s2,T63))));((eq(_f,fcNum(_s))),eq(_env,_env2),(((obj_call2(Env0,"string","has",[_s,"."])),eq(_s2,_s));(string_concat("",_s,T64),eq(_s2,T64))),eq(_prefix,""));((eq(_f,fcOp(_a,_b,_op,_info))),eq(_env,_env2),env_call(Env0,"gensym",[Env0,"T",_c]),eq(_s2,_c),env_call(Env0,"extract_type",[Env0,_a,_ta,_env]),env_call(Env0,"extract_type",[Env0,_b,_tb,_env]),(((obj_call2(Env0,"types","compare_types",[_ta,_tb])),true);(string_concat("using operator \"",_op,T70),dynamic_add(T70,"\" on types \"",T69),obj_call2(Env0,"types","type_to_string",[_ta,T71]),dynamic_add(T69,T71,T68),dynamic_add(T68,"\" and \"",T67),obj_call2(Env0,"types","type_to_string",[_tb,T72]),dynamic_add(T67,T72,T66),dynamic_add(T66,"\" (values must have the same type)",T65),env_call(Env0,"custom_throw",[Env0,T65,_info]))),(((eq(_ta,'[|]'("Number",[]));eq(_ta,'[|]'("Integer",[]))),eq(_sop,"fd_"));((eq(_ta,'[|]'("Real",[]))),eq(_sop,"r_"));((eq(_tb,'[|]'("Number",[]));eq(_tb,'[|]'("Integer",[]))),eq(_sop,"fd_"));((eq(_tb,'[|]'("Real",[]))),eq(_sop,"r_"));(eq(_sop,""))),(((eq(_sop,"")),(((eq(_op,"+")),(((eq(_ta,'[|]'("Any",[]))),eq(_fn,"dynamic_add"));(eq(_fn,"string_concat"))));((((eq(_ta,'[|]'("Any",[]))),env_call(Env0,"custom_throw",[Env0,"cannot infer type",_info]));(string_concat("cannot use operator \"",_op,T74),dynamic_add(T74,"\" (value is not a number)",T73),env_call(Env0,"custom_throw",[Env0,T73,_info]))))));((eq(_op,"/")),string_concat(_sop,"div",T75),eq(_fn,T75));((eq(_op,"*")),string_concat(_sop,"mul",T76),eq(_fn,T76));((eq(_op,"+")),string_concat(_sop,"add",T77),eq(_fn,T77));((eq(_op,"-")),string_concat(_sop,"sub",T78),eq(_fn,T78))),env_call(Env0,"extract_name",[Env0,_a,_sa,_env,_,_prefix1,_module]),env_call(Env0,"extract_name",[Env0,_b,_sb,_env,_,_prefix2,_module]),dynamic_add(_prefix1,_prefix2,T87),dynamic_add(T87,_fn,T86),dynamic_add(T86,"(",T85),dynamic_add(T85,_sa,T84),dynamic_add(T84,",",T83),dynamic_add(T83,_sb,T82),dynamic_add(T82,",",T81),dynamic_add(T81,_c,T80),dynamic_add(T80,"),",T79),eq(_prefix,T79));((eq(_f,fcStr(_sa))),eq(_env,_env2),eq(_prefix,""),obj_call2(Env0,"string","size",[_sa,T89]),fd_sub(T89,1,T88),obj_call2(Env0,"string","slice",[_sa,1,T88,_sb]),env_call(Env0,"escape_double_quotes",[Env0,_sb,"",_sc]),string_concat("\"",_sc,T91),dynamic_add(T91,"\"",T90),eq(_s2,T90));((eq(_f,fcObjGet(_a,_b))),eq(_env,_env2),env_call(Env0,"gensym",[Env0,"T",_c]),(((eq(_a,"this")),string_concat("env_get(Env0,\"",_b,T95),dynamic_add(T95,"\",",T94),dynamic_add(T94,_c,T93),dynamic_add(T93,"),",T92),eq(_prefix,T92));(string_concat("obj_get(Env0,\"",_a,T101),dynamic_add(T101,"\",\"",T100),dynamic_add(T100,_b,T99),dynamic_add(T99,"\",",T98),dynamic_add(T98,_c,T97),dynamic_add(T97,"),",T96),eq(_prefix,T96))),string_concat("closure(",_c,T103),dynamic_add(T103,",Env0)",T102),eq(_s2,T102));((eq(_f,fcGoal(_name,_args,_info))),env_call(Env0,"extract_args",[Env0,_args,_sargs,_env,_,_prefix,_module]),env_call(Env0,"make_this_string",[Env0,"",_name,_sargs,_prefix2]),string_concat(_prefix,_prefix2,T104),eq(_s2,T104));((eq(_f,fcFunc(_name,_args,_info))),(((eq(_name,"Cons")),env_call(Env0,"extract_args",[Env0,_args,_sb,_env,_env2,_prefix,_module]),obj_call2(Env0,"string","code",[_c,39]),string_concat(" ",_c,T110),dynamic_add(T110,"[|]",T109),dynamic_add(T109,_c,T108),dynamic_add(T108,"(",T107),dynamic_add(T107,_sb,T106),dynamic_add(T106,")",T105),eq(_s2,T105));((env_call(Env0,"is_functor",[Env0,_name,_env])),eq(_env,_env2),env_call(Env0,"extract_args",[Env0,_args,_sargs,_env,_,_prefix,_module]),string_concat("fc",_name,T114),dynamic_add(T114,"(",T113),dynamic_add(T113,_sargs,T112),dynamic_add(T112,")",T111),eq(_s2,T111));((env_call(Env0,"is_relation",[Env0,_name,_env])),(((env_call(Env0,"env_get_var",[Env0,_env,_name,_fvar])),obj_call2(Env0,"list","concat",[_args,'[|]'("Any",[]),_args2]),env_call(Env0,"compare_relation",[Env0,_fvar,_args2,_env,_,_info]));(obj_call2(Env0,"string","concat",["cannot find relation ",_name,_msg]))),env_call(Env0,"gensym",[Env0,"T",_s2]),env_call(Env0,"extract_args",[Env0,_args,_sargs,_env,_env2,_prefix1,_module]),(((obj_call2(Env0,"list","size",[_args,T115]),eq(T115,0)),dynamic_add(_sargs,_s2,T116),eq(_sargs2,T116));(dynamic_add(_sargs,",",T118),dynamic_add(T118,_s2,T117),eq(_sargs2,T117))),(((eq(_fvar,fcVar(_,"local",_))),env_call(Env0,"make_local_string",[Env0,"",_name,_sargs2,_prefix2]));((eq(_fvar,fcVar(_,"args",_))),env_call(Env0,"make_local_string",[Env0,"",_name,_sargs2,_prefix2]));(env_call(Env0,"make_this_string",[Env0,"",_name,_sargs2,_prefix2]))),dynamic_add(_prefix1,_prefix2,T120),dynamic_add(T120,",",T119),eq(_prefix,T119));(string_concat("cannot call variable of unknown type: ",_name,T121),eq(_msg,T121),env_call(Env0,"custom_throw",[Env0,_msg,_info]))));((eq(_f,fcFunc(_obj,_name,_args,_info))),(((env_call(Env0,"env_get_types",[Env0,_env,_obj,_ts]),neq(_ts,[])),(((env_call(Env0,"_env_get_var",[Env0,_ts,_name,_fvar])),obj_call2(Env0,"list","concat",[_args,'[|]'("Any",[]),_args2]),env_call(Env0,"compare_relation",[Env0,_fvar,_args2,_env,_,_info]),eq(_env,_env_a));(string_concat("cannot find relation ",_name,T124),dynamic_add(T124," in module ",T123),dynamic_add(T123,_obj,T122),env_call(Env0,"custom_throw",[Env0,T122,_info]))));(eq(_env,_env_a))),env_call(Env0,"gensym",[Env0,"T",_s2]),env_call(Env0,"extract_args",[Env0,_args,_sargs,_env_a,_env2,_prefix1,_module]),(((obj_call2(Env0,"list","size",[_args,T125]),eq(T125,0)),dynamic_add(_sargs,_s2,T126),eq(_sargs2,T126));(dynamic_add(_sargs,",",T128),dynamic_add(T128,_s2,T127),eq(_sargs2,T127))),string_concat("obj_call2(Env0,\"",_obj,T136),dynamic_add(T136,"\",",T135),dynamic_add(T135,"\"",T134),dynamic_add(T134,_name,T133),dynamic_add(T133,"\",",T132),dynamic_add(T132,"[",T131),dynamic_add(T131,_sargs2,T130),dynamic_add(T130,"]),",T129),eq(_prefix2,T129),dynamic_add(_prefix1,_prefix2,T137),eq(_prefix,T137));((eq(_f,fcTList(_args))),eq(_env,_env2),env_call(Env0,"extract_list",[Env0,_args,_sargs,_env,_prefix]),eq(_s2,_sargs));((eq(_f,fcTTable(_args))),eq(_env,_env2),env_call(Env0,"gensym",[Env0,"T",_s2]),string_concat("new(",_s2,T139),dynamic_add(T139,"),",T138),eq(_prefix,T138));((eq(_f,fcRel(_args1,_body1))),env_call(Env0,"env_lambdas",[Env0,_env,T140]),env_call(Env0,"generate_lambda",[Env0,_s2,_prefix,T140,_module]),env_call(Env0,"env_push_lambda",[Env0,_env,fcRel("",_args1,_body1),_env2]))).
gen_extract_type(Env0,_f,_type,_env) :- (((eq(_f,fcNum(_s))),(((obj_call2(Env0,"string","has",[_s,"."])),eq(_type,'[|]'("Real",[])));(eq(_type,'[|]'("Integer",[])))));((eq(_f,fcStr(_))),eq(_type,'[|]'("String",[])));((eq(_f,fcId(_name,_type_id))),(((neq(_type_id,[])),eq(_type_id, '[|]'(_type_name,_)),(((obj_call2(Env0,"list","has",['[|]'("Any",'[|]'("Number",'[|]'("Integer",'[|]'("Real",'[|]'("Functor",'[|]'("Relation",'[|]'("String",'[|]'("Table",'[|]'("File",[]))))))))),_type_name])),eq(_type,_type_id));(string_concat("\"",_type_name,T142),dynamic_add(T142,"\" is not a type",T141),obj_call2(Env0,"logic","throw",[T141]))));((env_call(Env0,"env_get",[Env0,_env,_fvar])),eq(_fvar,fcVar(_name,_,_type_var)),(((eq(_type_var,[])),eq(_type,'[|]'("Any",[])));((eq(_type_var,'[|]'("FunctorObject",[]))),env_call(Env0,"env_get_functor",[Env0,_env,_name,_fc_var]),eq(_fc_var,fcVar(_,_,_type)));(eq(_type,_type_var))));((env_call(Env0,"env_has_var",[Env0,_env,fcLib(_,_name)])),eq(_type,'[|]'("Table",[])));(eq(_type,'[|]'("Any",[])))));((eq(_f,fcFunc(_name,_args,_info))),env_call(Env0,"is_type",[Env0,_name,_ftype,_env]),(((eq(_ftype,"FunctorObject")),env_call(Env0,"extract_type_args",[Env0,_args,_targs,_env]),eq(_type, '[|]'("Functor",_targs)),env_call(Env0,"env_get_functor",[Env0,_env,_name,_var_fc]),env_call(Env0,"compare_functor",[Env0,_var_fc,_args,_env,_info]));(eq(_ftype,"Relation"),env_call(Env0,"env_get_var",[Env0,_env,_name,_fvar]),eq(_fvar,fcVar(_,_,_t1)),obj_call2(Env0,"list","last",[_t1,_type]))));((eq(_f,fcFunc(_obj,_name,_args,_info))),(((env_call(Env0,"env_get_types",[Env0,_env,_obj,_ts]),neq(_ts,[])),env_call(Env0,"_env_get_var",[Env0,_ts,_name,_fvar]),eq(_fvar,fcVar(_,_,_t1)),obj_call2(Env0,"list","concat",[_args,'[|]'("Any",[]),_args2]),obj_call2(Env0,"list","last",[_t1,_type]));(eq(_type,'[|]'("Any",[])))));((eq(_f,fcRel(_args,_))),env_call(Env0,"extract_type_args",[Env0,_args,_targs,_env]),eq(_type, '[|]'("Relation",_targs)));((eq(_f,fcOp(_a,_b,_op,_info))),eq(_type,'[|]'("Any",[])));((eq(_f,fcTList(_args))),env_call(Env0,"extract_type_args",[Env0,_args,_targs,_env]),eq(_type, '[|]'("Functor",_targs)));((eq(_f,fcTTable(_))),eq(_type,'[|]'("Table",[])));(eq(_type,'[|]'("Any",[])))).
gen_extract_args(Env0,_l,_s,_env,_env2,_prefix,_module) :- (((eq(_l, '[|]'(_f1,[]))),env_call(Env0,"extract_name",[Env0,_f1,_s,_env,_env2,_prefix,_module]));((eq(_l, '[|]'(_f1,_tail))),env_call(Env0,"extract_name",[Env0,_f1,_s1,_env,_env_a,_prefix2,_module]),env_call(Env0,"extract_args",[Env0,_tail,_s2,_env_a,_env2,_prefix1,_module]),obj_call2(Env0,"string","concat",[_prefix1,_prefix2,_prefix]),dynamic_add(_s1,",",T144),dynamic_add(T144,_s2,T143),eq(_s,T143));(eq(_l,[]),eq(_s,""),eq(_prefix,""),eq(_env2,_env))).
gen_extract_type_args(Env0,_l,_ts,_env) :- eq(_l, '[|]'(_f1,[])),eq(_ts, '[|]'(_t,[])),env_call(Env0,"extract_type",[Env0,_f1,_t,_env]);eq(_l, '[|]'(_f1,_tail)),eq(_ts, '[|]'(_t1,_t2)),env_call(Env0,"extract_type",[Env0,_f1,_t1,_env]),env_call(Env0,"extract_type_args",[Env0,_tail,_t2,_env]);eq(_l,[]),eq(_ts,[]).
gen_extract_type_args_and_push_into_env(Env0,_l,_ts,_env,_env2) :- eq(_l, '[|]'(_f1,[])),eq(_ts, '[|]'(_t,[])),eq(_f1,fcId(_name,_)),env_call(Env0,"env_init",[Env0,_env0,[],[],[]]),env_call(Env0,"extract_type",[Env0,_f1,_t,_env0]),env_call(Env0,"env_push",[Env0,_env,fcVar(_name,"args",_t),_env2]);eq(_l, '[|]'(_f1,_tail)),eq(_ts, '[|]'(_t1,_t2)),eq(_f1,fcId(_name,_)),env_call(Env0,"env_init",[Env0,_env0,[],[],[]]),env_call(Env0,"extract_type",[Env0,_f1,_t1,_env0]),env_call(Env0,"extract_type_args_and_push_into_env",[Env0,_tail,_t2,_env,_env_1]),env_call(Env0,"env_push",[Env0,_env_1,fcVar(_name,"args",_t1),_env2]);eq(_l,[]),eq(_ts,[]),eq(_env2,_env).
gen_extract_list(Env0,_l,_s,_env,_prefix) :- (((eq(_l, '[|]'(_f1,_tail))),env_call(Env0,"extract_name",[Env0,_f1,_sa,_env,_,_prefix1,_module]),env_call(Env0,"extract_list",[Env0,_tail,_sb,_env,_prefix2]),dynamic_add(_prefix1,_prefix2,T145),eq(_prefix,T145),obj_call2(Env0,"string","code",[_c,39]),dynamic_add(_c,"[|]",T147),dynamic_add(T147,_c,T146),eq(_symbol,T146),string_concat("",_symbol,T153),dynamic_add(T153,"(",T152),dynamic_add(T152,_sa,T151),dynamic_add(T151,",",T150),dynamic_add(T150,_sb,T149),dynamic_add(T149,")",T148),eq(_s,T148));(eq(_l,[]),eq(_s,"[]"),eq(_prefix,""))).
gen_make_lambda(Env0,_fc,_i,_code,_env,_module) :- eq(_fc,fcRel(_,_args,_f1)),env_call(Env0,"extract_type_args_and_push_into_env",[Env0,_args,_type,_env,_env_a]),obj_call2(Env0,"math","integerToString",[_i,T155]),string_concat(_module,T155,T154),eq(_name,T154),env_call(Env0,"stringfy_rel",[Env0,_name,_args,_f1,_code,_env_a,_,_module]).
gen_make_lambdas(Env0,_l,_l2,_i,_env,_module) :- (((eq(_l,[])),eq(_l2,[]));(eq(_l, '[|]'(_a,_b)),env_call(Env0,"make_lambda",[Env0,_a,_i,_a2,_env,_module]),eq(_l2, '[|]'(_a2,_b2)),fd_sub(_i,1,T156),env_call(Env0,"make_lambdas",[Env0,_b,_b2,T156,_env,_module]))).
gen_make_runtime_temps(Env0,_l,_l2,_i,_env,_module) :- (((eq(_l,[])),eq(_l2,[]));(eq(_l, '[|]'(_a,_b)),env_call(Env0,"make_lambda",[Env0,_a,_i,_a2,_env,_module]),string_concat("assert(",_a2,T158),dynamic_add(T158,")",T157),eq(_l2, '[|]'(T157,_b2)),obj_call2(Env0,"math","sub",[_i,1,_j]),env_call(Env0,"make_lambdas",[Env0,_b,_b2,_j,_env,_module]))).
gen_stringfy_rel(Env0,_name,_args,_f1,_code,_env,_lambdas,_module) :- env_call(Env0,"generate_body",[Env0,_f1,_sbody,_env,_env_a,_module]),env_call(Env0,"extract_ids",[Env0,_args,_sargs,_env,_]),(((eq(_args,[])),eq(_sa,"Env0"));(eq(_sa,"Env0,"))),env_call(Env0,"env_lambdas",[Env0,_env_a,_lambdas]),string_concat("",_name,T163),dynamic_add(T163,"(",T162),dynamic_add(T162,_sa,T161),dynamic_add(T161,_sargs,T160),dynamic_add(T160,") :- ",T159),eq(_header,T159),dynamic_add(_header,_sbody,T165),dynamic_add(T165,".\n",T164),eq(_code,T164).
gen_generate_cond(Env0,_l,_code,_env,_env2,_module) :- (((eq(_l, '[|]'(_c, '[|]'(_d,_l2)))),env_call(Env0,"generate_body",[Env0,_c,_sc,_env,_env_a,_module]),env_call(Env0,"generate_body",[Env0,_d,_sd,_env_a,_env_b,_module]),string_concat("((",_sc,T169),dynamic_add(T169,"),",T168),dynamic_add(T168,_sd,T167),dynamic_add(T167,")",T166),eq(_s2,T166),(((eq(_l2,[])),eq(_code,_s2),eq(_env2,_env_b));(env_call(Env0,"generate_cond",[Env0,_l2,_code1,_env_b,_env2,_module]),dynamic_add(_s2,";",T171),dynamic_add(T171,_code1,T170),eq(_code,T170))));((eq(_l, '[|]'(_c,[]))),env_call(Env0,"generate_body",[Env0,_c,_sc,_env,_env2,_module]),string_concat("(",_sc,T173),dynamic_add(T173,")",T172),eq(_code,T172));((eq(_l,[])),eq(_code,"true"),eq(_env2,_env))).
gen_specialize_type(Env0,_env,_a,_ta,_tb,_env2) :- (((eq(_a,fcId(_name,_))),(((obj_call2(Env0,"types","strict_type",[_ta,_tb,_tc])),env_call(Env0,"env_push_if_not_found",[Env0,_env,fcVar(_name,"local",_tc),_env2]));(obj_call2(Env0,"io","writeln",['[|]'(_ta,'[|]'(_tb,[]))]),obj_call2(Env0,"logic","throw",["no strict"]))));(eq(_env2,_env))).
gen_specialize_args(Env0,_l,_ts,_env,_env2) :- (((eq(_l,[])),eq(_env2,_env));(eq(_l, '[|]'(_a,_l2)),eq(_ts, '[|]'(_tb,_ts2)),env_call(Env0,"extract_type",[Env0,_a,_ta,_env]),env_call(Env0,"specialize_type",[Env0,_env,_a,_ta,_tb,_env_a]),env_call(Env0,"specialize_args",[Env0,_l2,_ts2,_env_a,_env2]))).
gen_generate_body(Env0,_f,_code,_env,_env2,_module) :- (((eq(_f,fcAnd(_a,_b))),env_call(Env0,"generate_body",[Env0,_a,_s1,_env,_temp,_module]),env_call(Env0,"generate_body",[Env0,_b,_s2,_temp,_env2,_module]),dynamic_add(_s1,",",T175),dynamic_add(T175,_s2,T174),eq(_code,T174));((eq(_f,fcOr(_a,_b))),env_call(Env0,"generate_body",[Env0,_a,_s1,_env,_env_a,_module]),env_call(Env0,"generate_body",[Env0,_b,_s2,_env_a,_env2,_module]),dynamic_add(_s1,";",T177),dynamic_add(T177,_s2,T176),eq(_code,T176));((eq(_f,fcBracket(_f1))),env_call(Env0,"generate_body",[Env0,_f1,_code0,_env,_env2,_module]),string_concat("(",_code0,T179),dynamic_add(T179,")",T178),eq(_code,T178));((eq(_f,fcEq(_a,_b,_info))),env_call(Env0,"extract_name",[Env0,_a,_sa,_env,_env_a,_prefix1,_module]),env_call(Env0,"extract_name",[Env0,_b,_sb,_env_a,_env_b,_prefix2,_module]),env_call(Env0,"extract_type",[Env0,_a,_ta,_env]),env_call(Env0,"extract_type",[Env0,_b,_tb,_env]),(((obj_call2(Env0,"types","compare_types",[_ta,_tb])),string_concat("",_prefix1,T186),dynamic_add(T186,_prefix2,T185),dynamic_add(T185,"eq(",T184),dynamic_add(T184,_sa,T183),dynamic_add(T183,",",T182),dynamic_add(T182,_sb,T181),dynamic_add(T181,")",T180),eq(_code,T180),env_call(Env0,"specialize_type",[Env0,_env_b,_a,_ta,_tb,_env_c]),env_call(Env0,"specialize_type",[Env0,_env_c,_b,_tb,_ta,_env2]));(obj_call2(Env0,"types","type_to_string",[_ta,T191]),string_concat("cannot unify type \"",T191,T190),dynamic_add(T190,"\" with type \"",T189),obj_call2(Env0,"types","type_to_string",[_tb,T192]),dynamic_add(T189,T192,T188),dynamic_add(T188,"\"",T187),env_call(Env0,"custom_throw",[Env0,T187,_info]))));((eq(_f,fcInequality(_a,_b,_op,_info))),env_call(Env0,"extract_name",[Env0,_a,_sa,_env,_env_a,_prefix1,_module]),env_call(Env0,"extract_name",[Env0,_b,_sb,_env_a,_env_b,_prefix2,_module]),env_call(Env0,"extract_type",[Env0,_a,_ta,_env]),env_call(Env0,"extract_type",[Env0,_b,_tb,_env]),(((eq(_ta,'[|]'("Number",[]));eq(_tb,'[|]'("Number",[]));obj_call2(Env0,"types","compare_types",[_ta,_tb])),(((eq(_op,"=")),string_concat("",_prefix1,T199),dynamic_add(T199,_prefix2,T198),dynamic_add(T198,"eq(",T197),dynamic_add(T197,_sa,T196),dynamic_add(T196,",",T195),dynamic_add(T195,_sb,T194),dynamic_add(T194,")",T193),eq(_code,T193));((((eq(_op,"!=")),eq(_fn,"neq"));((eq(_op,"<")),eq(_fn,"lt"));((eq(_op,"<=")),eq(_fn,"le"));((eq(_op,">")),eq(_fn,"gt"));((eq(_op,">=")),eq(_fn,"ge"))),(((eq(_ta,'[|]'("Integer",[]));eq(_ta,'[|]'("Number",[]))),eq(_s_op,"fd"));((eq(_ta,'[|]'("Real",[]))),eq(_s_op,"r"));((eq(_tb,'[|]'("Integer",[]));eq(_tb,'[|]'("Number",[]))),eq(_s_op,"fd"));((eq(_tb,'[|]'("Real",[]))),eq(_s_op,"r"));((((eq(_op,"!=")),eq(_s_op,""));((((eq(_ta,'[|]'("Any",[]))),env_call(Env0,"custom_throw",[Env0,"cannot infer type",_info]));(env_call(Env0,"custom_throw",[Env0,"not a number",_info]))))))),(((eq(_s_op,"")),string_concat("",_prefix1,T207),dynamic_add(T207,_prefix2,T206),dynamic_add(T206,_fn,T205),dynamic_add(T205,"(",T204),dynamic_add(T204,_sa,T203),dynamic_add(T203,",",T202),dynamic_add(T202,_sb,T201),dynamic_add(T201,")",T200),eq(_code,T200));(string_concat("",_prefix1,T217),dynamic_add(T217,_prefix2,T216),dynamic_add(T216,_s_op,T215),dynamic_add(T215,"_",T214),dynamic_add(T214,_fn,T213),dynamic_add(T213,"(",T212),dynamic_add(T212,_sa,T211),dynamic_add(T211,",",T210),dynamic_add(T210,_sb,T209),dynamic_add(T209,")",T208),eq(_code,T208))))),env_call(Env0,"specialize_type",[Env0,_env_b,_a,_ta,_tb,_env_c]),env_call(Env0,"specialize_type",[Env0,_env_c,_b,_tb,_ta,_env2]));(obj_call2(Env0,"types","type_to_string",[_ta,T222]),string_concat("cannot compare type \"",T222,T221),dynamic_add(T221,"\" with type \"",T220),obj_call2(Env0,"types","type_to_string",[_tb,T223]),dynamic_add(T220,T223,T219),dynamic_add(T219,"\"",T218),env_call(Env0,"custom_throw",[Env0,T218,_info]))));((eq(_f,fcRel(_name,_args,_f1))),env_call(Env0,"env_lambdas",[Env0,_env,T224]),env_call(Env0,"generate_lambda",[Env0,_s1,_prefix,T224,_module]),string_concat("eq(_",_name,T228),dynamic_add(T228,",",T227),dynamic_add(T227,_s1,T226),dynamic_add(T226,")",T225),eq(_code,T225),env_call(Env0,"extract_type_args",[Env0,_args,_type,_env]),env_call(Env0,"env_push",[Env0,_env,fcVar(_name,"local", '[|]'("Relation",_type)),_env_a]),env_call(Env0,"env_push_lambda",[Env0,_env_a,fcRel("",_args,_f1),_env2]));((eq(_f,fcPred(_name,_args,_info))),env_call(Env0,"extract_args",[Env0,_args,_sargs,_env,_env_a,_prefix,_module]),(((env_call(Env0,"env_get_var",[Env0,_env,_name,_fvar])),env_call(Env0,"compare_relation",[Env0,_fvar,_args,_env_a,_env2,_info]),(((eq(_fvar,fcVar(_,"local",_))),env_call(Env0,"make_local_string",[Env0,_prefix,_name,_sargs,_code]));((eq(_fvar,fcVar(_,"args",_))),env_call(Env0,"make_local_string",[Env0,_prefix,_name,_sargs,_code]));(env_call(Env0,"make_this_string",[Env0,_prefix,_name,_sargs,_code]))));(string_concat("cannot find relation ",_name,T229),env_call(Env0,"custom_throw",[Env0,T229,_info]))));((eq(_f,fcObjPred(_obj,_name,_args,_info))),(((eq(_obj,"this")),env_call(Env0,"extract_args",[Env0,_args,_sargs,_env,_env_a,_prefix,_module]),(((env_call(Env0,"env_get_var",[Env0,_env,_name,_fvar])),env_call(Env0,"compare_relation",[Env0,_fvar,_args,_env_a,_env2,_info]),env_call(Env0,"make_this_string",[Env0,_prefix,_name,_sargs,_code]));(string_concat("cannot find relation ",_name,T230),env_call(Env0,"custom_throw",[Env0,T230,_info]))));((((env_call(Env0,"find_lib",[Env0,_env,_obj])),env_call(Env0,"extract_args",[Env0,_args,_sargs,_env,_env_a,_prefix,_module]),(((env_call(Env0,"env_get_types",[Env0,_env,_obj,_ts]),neq(_ts,[])),(((env_call(Env0,"_env_get_var",[Env0,_ts,_name,_fvar])),env_call(Env0,"compare_relation",[Env0,_fvar,_args,_env_a,_env2,_info]));(string_concat("cannot find relation ",_name,T233),dynamic_add(T233," in module ",T232),dynamic_add(T232,_obj,T231),env_call(Env0,"custom_throw",[Env0,T231,_info]))));(eq(_env2,_env))),dynamic_add(_prefix,"obj_call2(Env0,\"",T242),dynamic_add(T242,_obj,T241),dynamic_add(T241,"\",",T240),dynamic_add(T240,"\"",T239),dynamic_add(T239,_name,T238),dynamic_add(T238,"\",",T237),dynamic_add(T237,"[",T236),dynamic_add(T236,_sargs,T235),dynamic_add(T235,"])",T234),eq(_code,T234));(string_concat("cannot find module \"",_obj,T244),dynamic_add(T244,"\"",T243),env_call(Env0,"custom_throw",[Env0,T243,_info]))))));((eq(_f,fcCond(_a,_b,_l))),env_call(Env0,"generate_body",[Env0,_a,_sa,_env,_env_a,_module]),env_call(Env0,"generate_body",[Env0,_b,_sb,_env_a,_env_b,_module]),env_call(Env0,"generate_cond",[Env0,_l,_scond,_env_b,_env2,_module]),string_concat("((",_sa,T248),dynamic_add(T248,"),",T247),dynamic_add(T247,_sb,T246),dynamic_add(T246,")",T245),eq(_code1,T245),string_concat("(",_code1,T252),dynamic_add(T252,";",T251),dynamic_add(T251,_scond,T250),dynamic_add(T250,")",T249),eq(_code,T249));((eq(_f,fcSoftCut(_a,_b,_l))),env_call(Env0,"generate_body",[Env0,_a,_sa,_env,_env_a,_module]),env_call(Env0,"generate_body",[Env0,_b,_sb,_env_a,_env_b,_module]),env_call(Env0,"generate_cond",[Env0,_l,_scond,_env_b,_env2,_module]),string_concat("(",_sa,T258),dynamic_add(T258,")->(",T257),dynamic_add(T257,_sb,T256),dynamic_add(T256,")",T255),dynamic_add(T255,";",T254),dynamic_add(T254,_scond,T253),eq(_code1,T253),string_concat("(",_code1,T260),dynamic_add(T260,")",T259),eq(_code,T259));((eq(_f,fcTrue)),eq(_env2,_env),eq(_code,"true"));((eq(_f,fcFalse)),eq(_env2,_env),eq(_code,"false"));((eq(_f,fcOnce(_a))),env_call(Env0,"generate_body",[Env0,_a,_s1,_env,_env2,_module]),string_concat("once(",_s1,T262),dynamic_add(T262,")",T261),eq(_code,T261));((eq(_f,fcDeclaration(_name,_type))),(((eq(_type, '[|]'("FunctorObject",_))),env_call(Env0,"env_push",[Env0,_env,fcVar(_name,"local",_type),_env_a]),env_call(Env0,"env_push_functor",[Env0,_env_a,fcVar(_name,"",'[|]'("Functor",[])),_env2]),eq(_code,"true"));(env_call(Env0,"env_push",[Env0,_env,fcVar(_name,"local",_type),_env2]),eq(_code,"true"))));((eq(_f,fcHost("pl",_name,_args))),env_call(Env0,"extract_args",[Env0,_args,_sargs,_env,_env2,_prefix,_module]),(((eq(_args,[])),dynamic_add(_prefix,_name,T263),eq(_code,T263));(dynamic_add(_prefix,_name,T267),dynamic_add(T267,"(",T266),dynamic_add(T266,_sargs,T265),dynamic_add(T265,")",T264),eq(_code,T264))))).
gen_generate_world(Env0,_f,_code,_env1,_env2,_module) :- (((eq(_f,fcAnd(_a,_b))),env_call(Env0,"generate_world",[Env0,_a,_s1,_env1,_temp_env,_module]),env_call(Env0,"generate_world",[Env0,_b,_s2,_temp_env,_env2,_module]),dynamic_add(_s1,_s2,T268),eq(_code,T268));((eq(_f,fcEq(_a,_b))),env_call(Env0,"extract_name",[Env0,_a,_sa,_env,_,_,_module]),env_call(Env0,"extract_name",[Env0,_b,_sb,_env,_,_,_module]),env_call(Env0,"env_push",[Env0,_env1,fcVar(_sa,_sb,'[|]'("Any",[])),_env2]),eq(_code,""));((eq(_f,fcRel(_name,_args,_f1))),env_call(Env0,"extract_type_args_and_push_into_env",[Env0,_args,_type,_env1,_env_fn]),eq(_fvar,fcVar(_name,"object", '[|]'("Relation",_type))),dynamic_add(_module,"_",T270),dynamic_add(T270,_name,T269),eq(_sname,T269),env_call(Env0,"env_push",[Env0,_env_fn,_fvar,T271]),env_call(Env0,"stringfy_rel",[Env0,_sname,_args,_f1,_code,T271,_lambdas,_module]),env_call(Env0,"env_push",[Env0,_env1,_fvar,_env_a]),env_call(Env0,"env_set_lambdas",[Env0,_env_a,_lambdas,_env2]));((eq(_f,fcFact(_name,_args,_info))),(((eq(_name,"require")),eq(_args, '[|]'(fcStr(_arg0), '[|]'(fcId(_arg1,_),_))),obj_call2(Env0,"string","size",[_arg0,_len]),obj_call2(Env0,"math","sub",[_len,1,_n]),obj_call2(Env0,"string","slice",[_arg0,1,_n,_arg_module]),dynamic_add(_arg_module,".pl",T272),eq(_fname,T272),string_concat(":- ensure_loaded(\"",_fname,T274),dynamic_add(T274,"\").\n",T273),eq(_code,T273),env_call(Env0,"env_push",[Env0,_env1,fcLib(_arg_module,_arg1),_env_a]),env_call(Env0,"extract_type_information",[Env0,_fname,_type_info]),env_call(Env0,"env_push_module",[Env0,_env_a,_arg1,_type_info,_env2]));((eq(_name,"functor")),eq(_code,""),eq(_args, '[|]'(fcId(_arg0,_), '[|]'(fcId(_arg1,_arg2),[]))),(((eq(_arg2,[])),eq(_type,'[|]'(_arg1,[])));(obj_call2(Env0,"list","concat",[_arg2,'[|]'('[|]'(_arg1,[]),[]),_type]))),eq(_type, '[|]'(_first_type,_)),(((neq(_first_type,"Functor")),string_concat("type \"",_first_type,T276),dynamic_add(T276,"\" is not a \"Functor\"",T275),env_call(Env0,"custom_throw",[Env0,T275,_info]));true),env_call(Env0,"env_push",[Env0,_env1,fcVar(_arg0,"object",'[|]'("FunctorObject",[])),_env_a]),env_call(Env0,"env_push_functor",[Env0,_env_a,fcVar(_arg0,"",_type),_env2]));(env_call(Env0,"custom_throw",[Env0,"only the relations 'require' and 'functor' are accepted here",_info]))));((eq(_f,fcDeclaration(_name,_type))),env_call(Env0,"env_push",[Env0,_env1,fcVar(_name,"object",_type),_env2]),eq(_code,""));(obj_call2(Env0,"logic","throw",["this code broke the compiler"]))).
gen_make_bind(Env0,_v,_i,_s,_module) :- (((eq(_v,fcVar(_a,_b,_))),dynamic_add(_module,"_",T278),dynamic_add(T278,_a,T277),eq(_name,T277),obj_call2(Env0,"math","integerToString",[_i,T288]),string_concat(",set(X",T288,T287),dynamic_add(T287,",",T286),dynamic_add(T286,"\"",T285),dynamic_add(T285,_a,T284),dynamic_add(T284,"\",",T283),dynamic_add(T283,_name,T282),dynamic_add(T282,",X",T281),fd_add(_i,1,T290),obj_call2(Env0,"math","integerToString",[T290,T289]),dynamic_add(T281,T289,T280),dynamic_add(T280,")",T279),eq(_s,T279));(eq(_v,fcLib(_name,_id)),obj_call2(Env0,"math","integerToString",[_i,_si]),string_concat(",",_name,T302),dynamic_add(T302,"_env(Y",T301),dynamic_add(T301,_si,T300),dynamic_add(T300,"),set(X",T299),dynamic_add(T299,_si,T298),dynamic_add(T298,",\"",T297),dynamic_add(T297,_id,T296),dynamic_add(T296,"\",Y",T295),dynamic_add(T295,_si,T294),dynamic_add(T294,",X",T293),fd_add(_i,1,T304),obj_call2(Env0,"math","integerToString",[T304,T303]),dynamic_add(T293,T303,T292),dynamic_add(T292,")",T291),eq(_s,T291))).
gen_make_binds(Env0,_l,_i,_i2,_s,_module) :- (((eq(_l,[])),eq(_i,_i2),eq(_s,""));(eq(_l, '[|]'(_a,_tail)),obj_call2(Env0,"math","add",[_i,1,_j]),env_call(Env0,"make_bind",[Env0,_a,_i,_s1,_module]),env_call(Env0,"make_binds",[Env0,_tail,_j,_i2,_s2,_module]),obj_call2(Env0,"string","concat",[_s1,_s2,_s]))).
gen_make_runtime_binds(Env0,_l,_i,_i2,_s,_module) :- (((eq(_l,[])),eq(_i,_i2),eq(_s,""));(eq(_l, '[|]'(_a,_tail)),obj_call2(Env0,"math","add",[_i,1,_j]),env_call(Env0,"make_bind",[Env0,_a,_i,_s1,_module]),env_call(Env0,"make_runtime_binds",[Env0,_tail,_j,_i2,_s2,_module]),string_concat("assert(",_s1,T307),dynamic_add(T307,_s2,T306),dynamic_add(T306,")",T305),eq(_s,T305))).
gen_serialize_item(Env0,_f,_s) :- (((eq(_f,fcVar(_name,"object",_type))),dynamic_add(_name," ",T309),obj_call2(Env0,"types","type_to_string",[_type,T310]),dynamic_add(T309,T310,T308),eq(_s,T308));(eq(_s,""))).
gen_notblank(Env0,_s) :- neq(_s,"").
gen_generate_chunk(Env0,_f,_code,_module,_opts) :- eq(_stdlibs,'[|]'(fcLib("table","table"),'[|]'(fcLib("list","list"),'[|]'(fcLib("string","string"),'[|]'(fcLib("math","math"),'[|]'(fcLib("io","io"),'[|]'(fcLib("logic","logic"),[]))))))),eq(_stdvars,'[|]'(fcVar("Cons","local",'[|]'("FunctorObject",[])),'[|]'(fcVar("Some","local",'[|]'("FunctorObject",[])),'[|]'(fcVar("None","local",'[|]'("FunctorObject",[])),'[|]'(fcVar("Left","local",'[|]'("FunctorObject",[])),'[|]'(fcVar("Right","local",'[|]'("FunctorObject",[])),[])))))),eq(_stdfcs,'[|]'(fcVar("Cons","local",'[|]'("Functor",[])),'[|]'(fcVar("Cons","",'[|]'("Functor",[])),'[|]'(fcVar("Some","",'[|]'("Functor",'[|]'('[|]'("Any",[]),[]))),'[|]'(fcVar("None","",'[|]'("Functor",'[|]'('[|]'("Null",[]),[]))),[]))))),(((obj_call2(Env0,"list","has",[_opts,"--no-std-libs"])),env_call(Env0,"env_init",[Env0,_env,_stdvars,_stdfcs,[]]));(obj_call2(Env0,"list","concat",[_stdlibs,_stdvars,T311]),env_call(Env0,"env_init",[Env0,_env0,T311,_stdfcs,[]]),env_call(Env0,"extract_modules",[Env0,_env0,'[|]'("list",'[|]'("table",'[|]'("string",'[|]'("math",'[|]'("io",'[|]'("logic",[])))))),_env]))),env_call(Env0,"generate_world",[Env0,_f,_code_world,_env,_env2,_module]),env_call(Env0,"env_vars",[Env0,_env2,T312]),env_call(Env0,"make_binds",[Env0,T312,0,_j,_s,_module]),env_call(Env0,"env_lambdas",[Env0,_env2,_lambdas]),obj_call2(Env0,"list","size",[_lambdas,T314]),fd_sub(T314,1,T313),env_call(Env0,"make_lambdas",[Env0,_lambdas,_l_lambdas,T313,_env2,_module]),env_get(Env0,"notblank",T322),env_get(Env0,"serialize_item",T321),env_call(Env0,"env_vars",[Env0,_env2,T320]),obj_call2(Env0,"list","map",[T320,closure(T321,Env0),T319]),obj_call2(Env0,"list","filter",[T319,closure(T322,Env0),T318]),obj_call2(Env0,"list","join",[T318,";",T317]),string_concat("%",T317,T316),dynamic_add(T316,"\n",T315),eq(_info,T315),string_concat("",_module,T327),dynamic_add(T327,"_env(X) :- new(X0)",T326),dynamic_add(T326,_s,T325),dynamic_add(T325,",X=X",T324),obj_call2(Env0,"math","integerToString",[_j,T328]),dynamic_add(T324,T328,T323),eq(_code_env,T323),string_concat(_info,":- style_check([-singleton,-no_effect]), ensure_loaded(\"core.pl\").\n",T333),obj_call2(Env0,"list","join",[_l_lambdas,"",T334]),dynamic_add(T333,T334,T332),dynamic_add(T332,_code_world,T331),dynamic_add(T331,_code_env,T330),dynamic_add(T330,".",T329),eq(_code,T329).
gen_generate_query(Env0,_f,_code,_prefix,_query_vars,_module) :- env_call(Env0,"env_init",[Env0,_env_a,'[|]'(fcLib("list","list"),'[|]'(fcLib("table","table"),'[|]'(fcLib("string","string"),'[|]'(fcLib("math","math"),'[|]'(fcLib("io","io"),'[|]'(fcLib("logic","logic"),'[|]'(fcVar("Cons","local",'[|]'("FunctorObject",[])),'[|]'(fcVar("Some","local",'[|]'("FunctorObject",[])),'[|]'(fcVar("None","local",'[|]'("FunctorObject",[])),'[|]'(fcVar("Left","local",'[|]'("FunctorObject",[])),'[|]'(fcVar("Right","local",'[|]'("FunctorObject",[])),[]))))))))))),'[|]'(fcVar("Cons","",'[|]'("Functor",[])),'[|]'(fcVar("Some","",'[|]'("Functor",'[|]'('[|]'("Any",[]),[]))),'[|]'(fcVar("None","",'[|]'("Functor",'[|]'('[|]'("Null",[]),[]))),'[|]'(fcVar("Left","",'[|]'("Functor",[])),'[|]'(fcVar("Right","",'[|]'("Functor",[])),[]))))),[]]),env_call(Env0,"extract_modules",[Env0,_env_a,'[|]'("list",'[|]'("table",'[|]'("string",'[|]'("math",'[|]'("io",'[|]'("logic",[])))))),_env_b]),(((eq(_module,"temp")),eq(_env,_env_b));(env_call(Env0,"extract_module",[Env0,_module,_ts]),env_get(Env0,"env_push",T335),obj_call2(Env0,"list","fold",[_ts,closure(T335,Env0),_env_b,_env]))),env_call(Env0,"generate_body",[Env0,_f,_s1,_env,_env2,_module]),env_call(Env0,"env_vars",[Env0,_env2,T336]),obj_call2(Env0,"list","filter",[T336,closure(gen0,Env0),_xx1]),obj_call2(Env0,"list","map",[_xx1,closure(gen1,Env0),_xx2]),list_to_set(_xx2,_query_vars),env_call(Env0,"env_vars",[Env0,_env2,T337]),env_call(Env0,"make_binds",[Env0,T337,0,_j,_s,_module]),string_concat("",_module,T343),dynamic_add(T343,"_env(X) :- new(X0)",T342),dynamic_add(T342,_s,T341),dynamic_add(T341,",X=X",T340),obj_call2(Env0,"math","integerToString",[_j,T344]),dynamic_add(T340,T344,T339),dynamic_add(T339,".\n",T338),eq(_prefix0,T338),env_call(Env0,"env_lambdas",[Env0,_env2,_lambdas]),obj_call2(Env0,"list","size",[_lambdas,T346]),fd_sub(T346,1,T345),env_call(Env0,"make_lambdas",[Env0,_lambdas,_l_temp_functions,T345,_env2,_module]),obj_call2(Env0,"list","join",[_l_temp_functions,"",_prefix1]),string_concat(_prefix0,_prefix1,T347),eq(_prefix,T347),dynamic_add(_module,"_env(Env0),",T351),dynamic_add(T351,"(",T350),dynamic_add(T350,_s1,T349),dynamic_add(T349,")",T348),eq(_code,T348).
gen_env(X) :- new(X0),set(X0,"generate_query",gen_generate_query,X1),set(X1,"generate_chunk",gen_generate_chunk,X2),set(X2,"notblank",gen_notblank,X3),set(X3,"serialize_item",gen_serialize_item,X4),set(X4,"make_runtime_binds",gen_make_runtime_binds,X5),set(X5,"make_binds",gen_make_binds,X6),set(X6,"make_bind",gen_make_bind,X7),set(X7,"generate_world",gen_generate_world,X8),set(X8,"generate_body",gen_generate_body,X9),set(X9,"specialize_args",gen_specialize_args,X10),set(X10,"specialize_type",gen_specialize_type,X11),set(X11,"generate_cond",gen_generate_cond,X12),set(X12,"stringfy_rel",gen_stringfy_rel,X13),set(X13,"make_runtime_temps",gen_make_runtime_temps,X14),set(X14,"make_lambdas",gen_make_lambdas,X15),set(X15,"make_lambda",gen_make_lambda,X16),set(X16,"generate_body",gen_generate_body,X17),set(X17,"stringfy_rel",gen_stringfy_rel,X18),set(X18,"extract_list",gen_extract_list,X19),set(X19,"extract_type_args_and_push_into_env",gen_extract_type_args_and_push_into_env,X20),set(X20,"extract_type_args",gen_extract_type_args,X21),set(X21,"extract_args",gen_extract_args,X22),set(X22,"extract_type",gen_extract_type,X23),set(X23,"extract_name",gen_extract_name,X24),set(X24,"generate_lambda",gen_generate_lambda,X25),set(X25,"extract_list",gen_extract_list,X26),set(X26,"extract_ids",gen_extract_ids,X27),set(X27,"extract_id",gen_extract_id,X28),set(X28,"escape_double_quotes",gen_escape_double_quotes,X29),set(X29,"is_relation",gen_is_relation,X30),set(X30,"is_functor",gen_is_functor,X31),set(X31,"is_type",gen_is_type,X32),set(X32,"is_type2",gen_is_type2,X33),set(X33,"make_this_string",gen_make_this_string,X34),set(X34,"make_local_string",gen_make_local_string,X35),set(X35,"compare_functor",gen_compare_functor,X36),set(X36,"compare_relation",gen_compare_relation,X37),set(X37,"id_var",gen_id_var,X38),set(X38,"is_id",gen_is_id,X39),set(X39,"specialize_args",gen_specialize_args,X40),set(X40,"extract_args",gen_extract_args,X41),set(X41,"extract_type",gen_extract_type,X42),set(X42,"extract_type_args",gen_extract_type_args,X43),set(X43,"extract_modules",gen_extract_modules,X44),set(X44,"extract_module",gen_extract_module,X45),set(X45,"find_lib",gen_find_lib,X46),set(X46,"env_get",gen_env_get,X47),set(X47,"env_get_functor",gen_env_get_functor,X48),set(X48,"env_get_types",gen_env_get_types,X49),set(X49,"env_has_var",gen_env_has_var,X50),set(X50,"env_get_var",gen_env_get_var,X51),set(X51,"_env_get_mod",gen__env_get_mod,X52),set(X52,"_env_get_var",gen__env_get_var,X53),set(X53,"_env_get",gen__env_get,X54),set(X54,"env_push_module",gen_env_push_module,X55),set(X55,"env_set_lambdas",gen_env_set_lambdas,X56),set(X56,"env_push_lambda",gen_env_push_lambda,X57),set(X57,"env_push_functor",gen_env_push_functor,X58),set(X58,"env_push_if_not_found",gen_env_push_if_not_found,X59),set(X59,"env_push",gen_env_push,X60),set(X60,"env_modules",gen_env_modules,X61),set(X61,"env_lambdas",gen_env_lambdas,X62),set(X62,"env_functors",gen_env_functors,X63),set(X63,"env_vars",gen_env_vars,X64),set(X64,"env_init",gen_env_init,X65),set(X65,"extract_type_information",gen_extract_type_information,X66),set(X66,"extract",gen_extract,X67),set(X67,"gensym",gen_gensym,X68),set(X68,"custom_throw",gen_custom_throw,X69),types_env(Y69),set(X69,"types",Y69,X70),whitespacer_env(Y70),set(X70,"whitespacer",Y70,X71),parser_env(Y71),set(X71,"parser",Y71,X72),lexer_env(Y72),set(X72,"lexer",Y72,X73),set(X73,"Info",gen_Info,X74),set(X74,"Op",gen_Op,X75),set(X75,"TTable",gen_TTable,X76),set(X76,"TList",gen_TList,X77),set(X77,"Goal",gen_Goal,X78),set(X78,"Func",gen_Func,X79),set(X79,"ObjGet",gen_ObjGet,X80),set(X80,"Id",gen_Id,X81),set(X81,"Str",gen_Str,X82),set(X82,"Num",gen_Num,X83),set(X83,"Declaration",gen_Declaration,X84),set(X84,"Once",gen_Once,X85),set(X85,"Host",gen_Host,X86),set(X86,"SoftCut",gen_SoftCut,X87),set(X87,"Cond",gen_Cond,X88),set(X88,"If",gen_If,X89),set(X89,"ObjPred",gen_ObjPred,X90),set(X90,"Bracket",gen_Bracket,X91),set(X91,"Or",gen_Or,X92),set(X92,"And",gen_And,X93),set(X93,"Pred",gen_Pred,X94),set(X94,"False",gen_False,X95),set(X95,"True",gen_True,X96),set(X96,"Inequality",gen_Inequality,X97),set(X97,"Neq",gen_Neq,X98),set(X98,"Eq",gen_Eq,X99),set(X99,"Fact",gen_Fact,X100),set(X100,"Rel",gen_Rel,X101),set(X101,"Lib",gen_Lib,X102),set(X102,"Local",gen_Local,X103),set(X103,"Var",gen_Var,X104),table_env(Y104),set(X104,"table",Y104,X105),list_env(Y105),set(X105,"list",Y105,X106),string_env(Y106),set(X106,"string",Y106,X107),math_env(Y107),set(X107,"math",Y107,X108),io_env(Y108),set(X108,"io",Y108,X109),logic_env(Y109),set(X109,"logic",Y109,X110),set(X110,"Cons",gen_Cons,X111),set(X111,"Some",gen_Some,X112),set(X112,"None",gen_None,X113),set(X113,"Left",gen_Left,X114),set(X114,"Right",gen_Right,X115),X=X115.